name: "Terraform Plan"
description: "Run terraform plan"

inputs:
  aws_ecr_role_arn:
    description: "AWS Terraform role"
    required: true
    default: "arn:aws:iam::593673322979:role/github_oidc_role_terraform"
  aws_region:
    description: "AWS Region"
    required: true
    default: "us-west-1"
  terraform_version:
    description: 'The version of Terraform to use'
    required: true
    default: '1.5.7'

outputs:
  terraform_has_changes:
    description: "Terraform Plan output"
    value: ${{ steps.terraform_plan.outputs.terraform_has_changes }}

runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.aws_ecr_role_arn }}
        aws-region: ${{ inputs.aws_region }}
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform_version }}
    - name: Initialize Terraform
      shell: bash
      run: terraform init
    - name: Terraform Plan
      id: terraform_plan
      shell: bash
      run: |
        terraform plan -out=terraform_plan.out
        terraform show -json terraform_plan.out > terraform_plan.json
        # Use jq to count only resources with actual changes (create, update, delete)
        terraform_has_changes=$(jq '[.resource_changes[] | select(.change.actions | index("create") or index("update") or index("delete"))] | length' terraform_plan.json)

        echo "Number of resources with changes: $terraform_has_changes"
        echo "Resource changes:"

        if [ $terraform_has_changes -gt 0 ]; then
          echo "terraform_has_changes=true" >> $GITHUB_OUTPUT
        else
          echo "terraform_has_changes=false" >> $GITHUB_OUTPUT
        fi
